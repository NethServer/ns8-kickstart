#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import sys
import agent
import os

# Connect the local Redis replica. This is necessary to consistently start
# the service if the leader node is not reachable:
rdb = agent.redis_connect(host='127.0.0.1')
smtp_settings = agent.get_smarthost_settings(rdb)

# Build a nice variables prefix, with the image name:
prefix = agent.get_image_name_from_url(os.environ['IMAGE_URL']).toupper() + '_SMTP_'
envfile = "smarthost.env"

# Using .tmp suffix: do not overwrite the target file until the new one is
# saved to disk:
with open(envfile + ".tmp", "w") as efp:
    # TODO: adjust variable names as wanted
    print(prefix, "ENABLED=", '1' if smtp_settings['enabled'], file=efp)
    print(prefix, "HOST=", smtp_settings['host'], file=efp)
    print(prefix, "PORT=", smtp_settings['port'], file=efp)
    print(prefix, "USERNAME=", smtp_settings['username'], file=efp)
    print(prefix, "PASSWORD=", smtp_settings['password'], file=efp)
    print(prefix, "ENCRYPTION=", smtp_settings['encrypt_smtp'], file=efp)
    print(prefix, "TLSVERIFY=", smtp_settings['tls_verify'], file=efp)

# Commit changes by replacing the existing envfile:
os.replace(envfile + ".tmp", envfile)

# NOTE: The generated envfile can be included in the service container
#       with `podman run --env-file` or in Systemd unit with
#       `Environment=-%S/state/smarthost.env`
